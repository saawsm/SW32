{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>The SW32 is a 4-channel E-Stim box based around the MK312-BT. Focusing on a design that adds modern conveniences like USB Type-C PD and Li-Ion battery support.</p> <p>Controlling and interacting with the box can be achieved in numerous ways. This includes the front panel inferface, Bluetooth, or via Wi-Fi using the internally hosted web app.</p> <p>An RP2040 microcontroller was picked since it has dual cores and the PIO hardware peripheral. An active community and well documented SDK is also a bonus.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>1.8\" 160x128 Color Display</li> <li>4x Isolated Output Channels</li> <li>Triphase Support</li> <li>Tri-polar (+, GND, -) Support</li> <li>4x Trigger Channels</li> <li>Stereo Line-In and Mono Microphone In (with programmable gain)</li> <li>Internal Microphone</li> <li>USB Type-C PD Charging</li> <li>Li-Ion / SLA Battery Pack Support</li> </ul>"},{"location":"#overview","title":"Overview","text":"<p>The SW32 consists of following PCBs:</p> PCB Description Main Board Provides the core functionality of the SW32. Output Board Generates isolated E-Stim output for each channel. Driven by the main board. Front Control Board The PCB with all the front panel controls (e.g. pots, buttons, LEDs). Provides wireless features. Front Panel A cosmetic silkscreen PCB for the front control board. Display Module 1.8\" 160x128 TFT SPI color display. <p>The reason for having a separate output board is primarily for flexibility, space savings (expand vertically instead of horizontally), and long-term cost savings. Most of the cost is in the main board. So being able to reuse the main board when changing the output design will help keep costs down.</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>The SW32 comes with absolutely no warranty of any kind. The designs are free to use, under the conditions defined in the license. Using the designs in original or modified form, implies acceptance of any and all associated risks and liabilities.</p> <ul> <li>Use it entirely at your own risk.</li> <li>Do not use it for anything safety-critical, medical, industrial, military, or illegal.</li> <li>Do not use it on anyone without explicit and informed consent.</li> <li>Keep any and all electrodes below the chest.</li> <li>Do not use Li-Ion battery packs without a BMS.</li> </ul>"},{"location":"#safety","title":"Safety","text":"<p>SW32 can generate potentially lethal voltages and currents on its outputs and on internal components, even when powered from a battery. The risks associated with building, testing and using this device can be reduced but not eliminated.</p>"},{"location":"building/","title":"Build Guide","text":"<p>This build guide assumes the reader has some experience with building open-source electronics kits.</p> <p>The PCBs have been designed with partial assembly from JLCPCB in mind. Hand soldering through-hole components will be required once ordered PCBs arrive.</p> <p>It's recommended to have access to a 3D printer. Some of the parts are designed to be 3D printed, such as the case and button caps. Optionally a 3D printing service such as JLC3DP could be used.</p>"},{"location":"building/#part-ordering","title":"Part Ordering","text":"<p>All parts required to populate the PCBs can be purchased from LCSC/JLCPCB with the following exceptions:</p> <ul> <li>Transformers - Usually in stock at Mouser.</li> <li>Potentiometers - Available at Mouser. Available as a preorder item at LCSC at the time of writing.</li> <li>Rotary Encoders - Available at Mouser. Out of stock at LCSC at the time of writing.</li> </ul> <p>BOM lists are available with associated zipped gerber files located in the <code>/pcb</code> directory. Each list is split in two, one for the surface mount components intended for the JLCPCB assembly service (<code>*.bom.csv</code>), and another for through-hole components (<code>*.bom-hand_assembly.csv</code>).</p> <p>This allows for easy ordering of through-hole components at LCSC via their BOM Tool.</p>"},{"location":"building/#misc-parts","title":"Misc Parts","text":"<p>Parts that don't fit the assembly BOM files are placed in the BOM file located in the <code>/docs/assets</code> directory.</p> Name Description Supplier Quantity Notes Display 1.8 Color TFT SPI Display (ADA358) Adafruit 1 Search for ADA358 for resellers Case 3D Printed Case User or Print Service 1 nan Button Caps 3D Printed Button Caps 10x10 User or Print Service 4 nan Power Button Cap 3D Printed Button Cap 7x7 User or Print Service 1 nan Ribbon Cable 2x4 16P 2.54mm 0.1\u201d Pitch Ribbon Cable Amazon/AliExpress 1 Connects main_board to front_panel_control Jumper Cable 1x10 2.54mm 0.1\u201d Pitch Jumper Cable Amazon/AliExpress 1 Connects front_panel_control to display module Encoder/Pot Knobs Rotary Encoder &amp; Potentiometer Knobs Amazon/AliExpress 5 Knurled 18T - Min ~8 mm depth Display Standoffs M2 Nylon Standoffs + Screws/Nuts Amazon/AliExpress 4 6mm length (with foam under display) or M2 spacers (~3mm length) Front Panel Standoffs M2 Nylon Standoffs + Screws/Nuts Amazon/AliExpress 5 10mm length U.FL Antenna 2.4 GHz U.FL Antenna Amazon/AliExpress 1 Internal Omnidirectional PCB antenna \u2013 50 ohm"},{"location":"building/#pcb-ordering","title":"PCB Ordering","text":"<p>The following provides recommended settings for ordering PCBs and getting them assembled. If an option isn't specified it's assumed to be set to the default setting provided by JLCPCB.</p> <p>Component rotations in CPL files should be correct, but I recommend to double check them anyway during checkout.</p> About order quantity <p>Please note that the minimum order quantity for PCB Assembly at JLCPCB is two, while the minimum for PCB fabrication is five. Additionally certain components have a minimum assembly quantity of five (and attrition quantity but we will ignore that for now).</p> <p>If you order two assembled boards each using one component, and this component has a minimum assembly quantity of five, it will still use five components. You then will receive two assembled and three blank PCBs.</p> <p>Additionally initial setup fees don't scale with order quantity, so ordering five is more efficient than ordering two assembled boards.</p>"},{"location":"building/#main-board","title":"Main Board","text":"Asset File Gerbers <code>main_board.zip</code> BOM <code>main_board.bom.csv</code> CPL <code>main_board.top-cpl.csv</code> Option Value Base Material FR-4 Layers 4 PCB Thickness 1.6mm Outer Copper Weight 1oz Inner Copper Weight 0.5oz Specify Layer Sequence F_Cu, In1_Cu, In2_Cu, B_Cu Impedance Control? Yes Layer Stackup JLC04161H-7628 Via Covering Plugged (free upgrade from tented) Remove Order Number Specify a location PCB Assembly? Yes PCBA Type Economic Assembly Side Top Side"},{"location":"building/#output-board","title":"Output Board","text":"Asset File Gerbers <code>output_board.zip</code> BOM <code>output_board.bom.csv</code> CPL <code>output_board.top-cpl.csv</code> PCB Option Value Base Material FR-4 Layers 2 PCB Thickness 1.6mm Outer Copper Weight 1oz Via Covering Tented Remove Order Number Specify a location PCB Assembly? Yes PCBA Type Economic Assembly Side Top Side"},{"location":"building/#front-control-board","title":"Front Control Board","text":"Asset File Gerbers <code>front_control_board.zip</code> BOM <code>front_control_board.bom.csv</code> CPL <code>front_control_board.top-cpl.csv</code> Option Value Base Material FR-4 Layers 2 PCB Thickness 1.6mm Outer Copper Weight 1oz Via Covering Tented Remove Order Number Specify a location PCB Assembly? Yes PCBA Type Standard (required for LEDs and ESP32 module) Assembly Side Top Side Bake Components? Yes (recommended for moisture sensitive LEDs. LEDs have a high chance of being DOA without this)"},{"location":"building/#front-panel","title":"Front Panel","text":"Asset File Gerbers <code>front_panel.zip</code> BOM N/A CPL N/A Option Value Base Material FR-4 Layers 2 PCB Thickness 1.6mm Outer Copper Weight 1oz Via Covering Tented PCB Color Black (suggested for high contrast readable text, feel free to pick any color) Silkscreen White Remove Order Number Specify a location PCB Assembly? No Front panel has no components ."},{"location":"building/#assembly","title":"Assembly","text":"<p>View the iBOM (<code>*-ibom.html</code>) for an overview and guidance on component placement. Use <code>HandAssembly</code> as the filter to show only the components needing hand soldering.</p> <p>See the <code>*.bom-hand_assembly.csv</code> and <code>bom.misc.csv</code> BOM files for the parts list of components requiring manual assembly.</p> <p>The sections listed below are in recommended assembly order.</p>"},{"location":"building/#assembly-front-control-board","title":"Front Control Board","text":"<p>Image of board as it arrived from JLCPCB:</p> <p></p> <p></p> <ul> <li>Remove assembly rails by bending along v-cut lines, being careful not to bend the PCB near any of the components.</li> </ul> <p></p> <p></p> <ul> <li>Hand solder through-hole components on the sides indicated by the silkscreen.<ul> <li>BZ1 can be installed on the bottom side, or top side if using 10mm standoffs.</li> </ul> </li> <li>J4 is optional and only needed if you want to add extra LED strips.</li> <li>Recommended to solder back components first (J1, J2, and J3) and optionally J4/BZ1.</li> <li>Install 5x standoffs on top side of board.</li> <li>Attach the U.FL antenna to the connector on the ESP32 module (U1).</li> </ul> <p>Fully assembled board:</p> <p></p> <p></p>"},{"location":"building/#assembly-front-panel","title":"Front Panel","text":"<p>Image of board as it arrived from JLCPCB:</p> <p></p> <p></p> <ul> <li>Ensure the display module has a 10P 0.1\" pin header soldered on the back.</li> <li>Install 4x display standoffs onto display module first, then attach to the front panel with 4x screws.</li> <li>Place 4x 10x10 button caps into the holes of the front panel board.</li> <li>Install front panel control board onto front panel with 4x screws, so the button caps are captured between the two PCBs.</li> <li>Push on the encoder/pot knobs.</li> </ul> <p>Fully assembled board:</p> <p></p> <p></p>"},{"location":"building/#assembly-main-board","title":"Main Board","text":"<p>Image of board as it arrived from JLCPCB:</p> <p></p> <p></p> <ul> <li>Hand solder through-hole components on the top side (indicated by the silkscreen).</li> <li>Recommended to solder SW1 first, then CT1, CT2, CT3, and CT4.</li> <li>J7/J8 are optional and only used for debugging and future peripheral addon support.</li> <li>Ensure TRS sockets (J15-J18, J2-J3, J9, J11) are aligned with the board edge before soldering, so the front panel will fit cleanly.</li> </ul> <p>Fully assembled board:</p> <p></p>"},{"location":"building/#assembly-output-board","title":"Output Board","text":"<p>Image of board as it arrived from JLCPCB:</p> <p></p> <p></p> <ul> <li>Hand solder through-hole components on the sides indicated by the silkscreen.</li> <li>Recommended to solder back components first (J1, J2, and J3), ensure they are aligned correctly by first plugging them into the main board.</li> <li>The \"P\" marking on each transformer (T1, T2, T3, and T4) should face towards J3 (CH_OUT). We are using the transformers in reverse, the primaries going to outputs.</li> <li>The 4x MOSFETs (Q1, Q4, Q7, and Q10) should have the exposed metal pad facing towards the transformers.</li> </ul> MOSFET Metal Pads <p>Ensure that the exposed metal pads of each MOSFET (Q1, Q4, Q7, and Q10) are not touching one another. Recommend to solder one leg of each MOSFET first, so the spacing/clearance can be adjusted easily, before soldering the remaining legs. A high-temp non-conductive separator between each pad might also be a wise addition (e.g. polyimide tape).</p> Vibration <p>If the box is going to be subjected to vibrations, securing the MOSFETs to the PCB is also recommended. This will prevent the legs from breaking due to metal fatigue.</p> <p>Fully assembled board:</p> <p></p> <p></p> <p>Main Board assembly:</p> <p></p>"},{"location":"building/#assembly-case","title":"Case","text":"<p>TBW</p>"},{"location":"firmware/","title":"Firmware","text":"<p>The firmware for the SW32 is open-source and mostly written in C. It makes use of both pico-sdk and esp-idf frameworks.</p> <p>It can be acquired by downloading precompiled binaries or built directly from source. Unless you make significant hardware changes, you can use precompiled firmware most of the time.</p>"},{"location":"firmware/#precompiled-firmware","title":"Precompiled Firmware","text":"<p>Available in <code>/firmware/&lt;board_name&gt;</code>, compiled using default configuration options. If your SW32 build differs from stock, you might need to build from source.</p>"},{"location":"firmware/#flashing","title":"Flashing","text":"<p>The following sections detail how to flash the boards with firmware.</p>"},{"location":"firmware/#flashing-main-board","title":"Main Board","text":"<p>Since the main board uses an RP2040, the process of flashing the main board is very similar to flashing a Raspberry Pi Pico.</p> <ol> <li>Ensure main board is unpowered by checking that the PWR LED is off (D7).</li> <li>Bridge the <code>BOOT</code> header (JP3) using a jumper shunt or paper clip.</li> <li>Connect to computer via USB cable.</li> <li>Remove the jumper shunt or paper clip from <code>BOOT</code> header (JP3) (step #2)</li> <li>The main board should appear as a USB mass storage device. Copy the <code>swx.uf2</code> file found in <code>/firmware</code> (<code>/source/swx/build</code> if building from source) into this drive.</li> <li>The USB mass storage device should disappear. You can confirm flashing was successful using a Serial Monitor or wait until after the front control board is loaded with firmware.</li> </ol>"},{"location":"firmware/#flashing-front-control-board","title":"Front Control Board","text":"<p>Flashing the front control board is a little more involved compared to the main board. Ideally, you will need an ESP-PROG to make flashing easier.</p>"},{"location":"firmware/#esp-prog-method-preferred","title":"ESP-PROG Method (Preferred)","text":"<p>The ESP-PROG is the easiest way to connect to the front control board for flashing.</p> <ol> <li>Ensure the front control board is disconnected from the main board.</li> <li>Configure the ESP-PROG jumpers:</li> </ol> <ul> <li><code>PROG PWR SEL</code> = 3.3V (Warning: Ensure this is set to 3.3V, if set to 5V the board will be damaged)</li> <li><code>IO0 On/Off</code> = On (jumper shunt installed)</li> </ul> <ol> <li>Connect the ESP-PROG 2x3 0.1\" <code>PROG</code> connector to the front control board <code>PROG</code> connector.</li> <li>Flash using ESPWEBTOOL if using precompiled firmware or by direct flashing when building from source.</li> </ol>"},{"location":"firmware/#main-board-usb-bridge-method-not-recommended","title":"Main Board USB Bridge Method (Not recommended)","text":"<p>If you don't have an ESP-PROG or don't want to get one. This method uses the main board as a USB to Serial converter so you can flash the front control board through the main board.</p> <ol> <li>Follow the section on flashing the main board but instead of using the <code>swx.uf2</code> file, use the <code>swx-bridge.uf2</code> file.</li> <li>Ensure the main board is unpowered by checking that the PWR LED is off (D7).</li> <li>Ensure the front control board is connected to the main board via the 2x4 connector.</li> <li>Jump the <code>IO0</code> pin of the front control panel <code>PROG</code> header to ground.</li> <li>Connect to computer via USB cable.</li> <li>Remove jumper from the <code>IO0</code> pin (step #4).</li> <li>Flash using ESPWEBTOOL if using precompiled firmware or by direct flashing when building from source.</li> <li>Revert step one by following the section on flashing the main board (using the <code>swx.uf2</code> this time).</li> </ol>"},{"location":"firmware/#flash-using-espwebtool-preferred","title":"Flash using ESPWEBTOOL (Preferred)","text":"<p>This is the easiest method for flashing the front control board when using precompiled firmware.</p> <ol> <li>Goto the ESPWEBTOOL site.</li> <li>Click <code>Connect</code> &amp; select the correct COM port.</li> <li> <p>Enter the following partitions:</p> Offset File Name 0x1000 bootloader.bin 0x8000 partition-table.bin 0x10000 swef.bin 0x210000 www.bin </li> <li> <p>Click <code>PROGRAM</code></p> </li> <li>Upon completion, the display should startup.</li> </ol>"},{"location":"firmware/#building-from-source","title":"Building from Source","text":""},{"location":"firmware/#main-board","title":"Main Board","text":"<ol> <li>Install pico-sdk (Windows users look here).</li> </ol> <pre><code>git submodule update --init --recursive\n\ncd source/swx\nmkdir build\n\ncmake ..\nmake -j4\n</code></pre> <p>Compiled firmware is at <code>/build/swx.uf2</code>. See the flashing section for how to flash the board with the firmware.</p>"},{"location":"firmware/#front-control-board","title":"Front Control Board","text":"<ol> <li>Install esp-idf.</li> </ol> <pre><code>git submodule update --init --recursive\n\ncd source/swef\nmkdir build\n\nidf.py build\n</code></pre> <p>Compiled firmware is at:</p> <ul> <li><code>/build/swef.bin</code></li> <li><code>/build/www.bin</code></li> <li><code>/build/partition-table/partition-table.bin</code></li> <li><code>/build/bootloader/bootloader.bin</code></li> </ul> <p>See the flashing section for how to flash the board with the firmware.</p>"},{"location":"firmware/#direct-flashing","title":"Direct Flashing","text":"<ol> <li>Ensure you have esp-idf installed.</li> <li>Build front control board firmware at least once.</li> </ol> <pre><code>cd source/swef\nidf.py flash -p &lt;port&gt;\n</code></pre>"}]}